#!/usr/bin/php
<?php
// process --template templates/listings/hero/single.hbs --dest template/listings/hero/single.php
require('lightncandy.php');

define('THEME', dirname(dirname(dirname(__FILE__))) . '/');

$options  = array(
    "template:",
    "dest:"
);
$opts = getopt('', $options);

$compile_options = array(
    'flags' => LightnCandy::FLAG_STANDALONE | LightnCandy::FLAG_RUNTIMEPARTIAL | LightnCandy::FLAG_ELSE | LightnCandy::FLAG_INSTANCE | LightnCandy::FLAG_PARENT | LightnCandy::FLAG_WITH | LightnCandy::FLAG_THIS | LightnCandy::FLAG_SPVARS,
    'basedir' => array(THEME . 'templates'),
    'helpers' => array(
        'addOne' => function ($value) {
            return intval($value) + 1;
        }
    ),
  'hbhelpers' => array(
      'or' => function () {
          $args = func_get_args();
          $argLength = count($args) - 1;
          $context = $args[$argLength];
          $success = false;

          $i = 0;
        while ($i < $argLength) {
            if ($args[$i]) {
                $success = true;
                break;
            }
            $i++;
        }
        if ($success) {
            return $context['fn']();
        } else if (isset($context['inverse'])) {
            return $context['inverse']();
        }
        return '';
      },
      'and' => function ($a, $b, $options) {
        if ($a && $b) {
            return $options['fn']();
        } else if (isset($options['inverse'])) {
            return $options['inverse']();
        }
        return '';
      },
      'lengthGT' => function ($array, $length, $options) {
        if (count($array) > $length) {
            return $options['fn']();
        } else if (isset($options['inverse'])) {
            return $options['inverse']();
        }
        return '';
      },
      'ifEq' => function ($a, $b, $options) {
        if ($a === $b) {
            return $options['fn']();
        } else if (isset($options['inverse'])) {
            return $options['inverse']();
        } else {
            return;
        }
      },
      'isDefined' => function ($x, $options) {
        if (isset($x)) {
            return $options['fn']();
        } else if (isset($options['inverse'])) {
            return $options['inverse']();
        }
        return '';
      }
  ),
    'fileext' => array('.hbs')
);

$template = file_get_contents(THEME . $opts['template']);

$phpStr = LightnCandy::compile($template, $compile_options);

file_put_contents(THEME . $opts['dest'], $phpStr);
